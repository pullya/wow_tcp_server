// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Storageer is an autogenerated mock type for the Storageer type
type Storageer struct {
	mock.Mock
}

// GetRandomWOW provides a mock function with given fields: ctx
func (_m *Storageer) GetRandomWOW(ctx context.Context) string {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for GetRandomWOW")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context) string); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewStorageer creates a new instance of Storageer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewStorageer(t interface {
	mock.TestingT
	Cleanup(func())
}) *Storageer {
	mock := &Storageer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
